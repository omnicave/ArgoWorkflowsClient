/*
 * Argo Workflows API
 *
 * Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes. For more information, please see https://argoproj.github.io/argo-workflows/
 *
 * The version of the OpenAPI document: VERSION
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = ArgoWorkflowsClient.Client.OpenAPIDateConverter;

namespace ArgoWorkflowsClient.Model
{
    /// <summary>
    /// IoArgoprojEventsV1alpha1Template
    /// </summary>
    [DataContract(Name = "io.argoproj.events.v1alpha1.Template")]
    public partial class IoArgoprojEventsV1alpha1Template : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="IoArgoprojEventsV1alpha1Template" /> class.
        /// </summary>
        /// <param name="affinity">affinity.</param>
        /// <param name="container">container.</param>
        /// <param name="imagePullSecrets">imagePullSecrets.</param>
        /// <param name="metadata">metadata.</param>
        /// <param name="nodeSelector">nodeSelector.</param>
        /// <param name="priority">priority.</param>
        /// <param name="priorityClassName">priorityClassName.</param>
        /// <param name="securityContext">securityContext.</param>
        /// <param name="serviceAccountName">serviceAccountName.</param>
        /// <param name="tolerations">tolerations.</param>
        /// <param name="volumes">volumes.</param>
        public IoArgoprojEventsV1alpha1Template(IoK8sApiCoreV1Affinity affinity = default(IoK8sApiCoreV1Affinity), IoK8sApiCoreV1Container container = default(IoK8sApiCoreV1Container), List<IoK8sApiCoreV1LocalObjectReference> imagePullSecrets = default(List<IoK8sApiCoreV1LocalObjectReference>), IoArgoprojEventsV1alpha1Metadata metadata = default(IoArgoprojEventsV1alpha1Metadata), Dictionary<string, string> nodeSelector = default(Dictionary<string, string>), int priority = default(int), string priorityClassName = default(string), IoK8sApiCoreV1PodSecurityContext securityContext = default(IoK8sApiCoreV1PodSecurityContext), string serviceAccountName = default(string), List<IoK8sApiCoreV1Toleration> tolerations = default(List<IoK8sApiCoreV1Toleration>), List<IoK8sApiCoreV1Volume> volumes = default(List<IoK8sApiCoreV1Volume>))
        {
            this.Affinity = affinity;
            this.Container = container;
            this.ImagePullSecrets = imagePullSecrets;
            this.Metadata = metadata;
            this.NodeSelector = nodeSelector;
            this.Priority = priority;
            this.PriorityClassName = priorityClassName;
            this.SecurityContext = securityContext;
            this.ServiceAccountName = serviceAccountName;
            this.Tolerations = tolerations;
            this.Volumes = volumes;
        }

        /// <summary>
        /// Gets or Sets Affinity
        /// </summary>
        [DataMember(Name = "affinity", EmitDefaultValue = false)]
        public IoK8sApiCoreV1Affinity Affinity { get; set; }

        /// <summary>
        /// Gets or Sets Container
        /// </summary>
        [DataMember(Name = "container", EmitDefaultValue = false)]
        public IoK8sApiCoreV1Container Container { get; set; }

        /// <summary>
        /// Gets or Sets ImagePullSecrets
        /// </summary>
        [DataMember(Name = "imagePullSecrets", EmitDefaultValue = false)]
        public List<IoK8sApiCoreV1LocalObjectReference> ImagePullSecrets { get; set; }

        /// <summary>
        /// Gets or Sets Metadata
        /// </summary>
        [DataMember(Name = "metadata", EmitDefaultValue = false)]
        public IoArgoprojEventsV1alpha1Metadata Metadata { get; set; }

        /// <summary>
        /// Gets or Sets NodeSelector
        /// </summary>
        [DataMember(Name = "nodeSelector", EmitDefaultValue = false)]
        public Dictionary<string, string> NodeSelector { get; set; }

        /// <summary>
        /// Gets or Sets Priority
        /// </summary>
        [DataMember(Name = "priority", EmitDefaultValue = false)]
        public int Priority { get; set; }

        /// <summary>
        /// Gets or Sets PriorityClassName
        /// </summary>
        [DataMember(Name = "priorityClassName", EmitDefaultValue = false)]
        public string PriorityClassName { get; set; }

        /// <summary>
        /// Gets or Sets SecurityContext
        /// </summary>
        [DataMember(Name = "securityContext", EmitDefaultValue = false)]
        public IoK8sApiCoreV1PodSecurityContext SecurityContext { get; set; }

        /// <summary>
        /// Gets or Sets ServiceAccountName
        /// </summary>
        [DataMember(Name = "serviceAccountName", EmitDefaultValue = false)]
        public string ServiceAccountName { get; set; }

        /// <summary>
        /// Gets or Sets Tolerations
        /// </summary>
        [DataMember(Name = "tolerations", EmitDefaultValue = false)]
        public List<IoK8sApiCoreV1Toleration> Tolerations { get; set; }

        /// <summary>
        /// Gets or Sets Volumes
        /// </summary>
        [DataMember(Name = "volumes", EmitDefaultValue = false)]
        public List<IoK8sApiCoreV1Volume> Volumes { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class IoArgoprojEventsV1alpha1Template {\n");
            sb.Append("  Affinity: ").Append(Affinity).Append("\n");
            sb.Append("  Container: ").Append(Container).Append("\n");
            sb.Append("  ImagePullSecrets: ").Append(ImagePullSecrets).Append("\n");
            sb.Append("  Metadata: ").Append(Metadata).Append("\n");
            sb.Append("  NodeSelector: ").Append(NodeSelector).Append("\n");
            sb.Append("  Priority: ").Append(Priority).Append("\n");
            sb.Append("  PriorityClassName: ").Append(PriorityClassName).Append("\n");
            sb.Append("  SecurityContext: ").Append(SecurityContext).Append("\n");
            sb.Append("  ServiceAccountName: ").Append(ServiceAccountName).Append("\n");
            sb.Append("  Tolerations: ").Append(Tolerations).Append("\n");
            sb.Append("  Volumes: ").Append(Volumes).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
