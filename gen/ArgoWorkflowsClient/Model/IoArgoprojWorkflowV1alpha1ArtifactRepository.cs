/*
 * Argo Workflows API
 *
 * Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes. For more information, please see https://argoproj.github.io/argo-workflows/
 *
 * The version of the OpenAPI document: VERSION
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = ArgoWorkflowsClient.Client.OpenAPIDateConverter;

namespace ArgoWorkflowsClient.Model
{
    /// <summary>
    /// ArtifactRepository represents an artifact repository in which a controller will store its artifacts
    /// </summary>
    [DataContract(Name = "io.argoproj.workflow.v1alpha1.ArtifactRepository")]
    public partial class IoArgoprojWorkflowV1alpha1ArtifactRepository : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="IoArgoprojWorkflowV1alpha1ArtifactRepository" /> class.
        /// </summary>
        /// <param name="archiveLogs">ArchiveLogs enables log archiving.</param>
        /// <param name="artifactory">artifactory.</param>
        /// <param name="azure">azure.</param>
        /// <param name="gcs">gcs.</param>
        /// <param name="hdfs">hdfs.</param>
        /// <param name="oss">oss.</param>
        /// <param name="s3">s3.</param>
        public IoArgoprojWorkflowV1alpha1ArtifactRepository(bool archiveLogs = default(bool), IoArgoprojWorkflowV1alpha1ArtifactoryArtifactRepository artifactory = default(IoArgoprojWorkflowV1alpha1ArtifactoryArtifactRepository), IoArgoprojWorkflowV1alpha1AzureArtifactRepository azure = default(IoArgoprojWorkflowV1alpha1AzureArtifactRepository), IoArgoprojWorkflowV1alpha1GCSArtifactRepository gcs = default(IoArgoprojWorkflowV1alpha1GCSArtifactRepository), IoArgoprojWorkflowV1alpha1HDFSArtifactRepository hdfs = default(IoArgoprojWorkflowV1alpha1HDFSArtifactRepository), IoArgoprojWorkflowV1alpha1OSSArtifactRepository oss = default(IoArgoprojWorkflowV1alpha1OSSArtifactRepository), IoArgoprojWorkflowV1alpha1S3ArtifactRepository s3 = default(IoArgoprojWorkflowV1alpha1S3ArtifactRepository))
        {
            this.ArchiveLogs = archiveLogs;
            this.Artifactory = artifactory;
            this.Azure = azure;
            this.Gcs = gcs;
            this.Hdfs = hdfs;
            this.Oss = oss;
            this.S3 = s3;
        }

        /// <summary>
        /// ArchiveLogs enables log archiving
        /// </summary>
        /// <value>ArchiveLogs enables log archiving</value>
        [DataMember(Name = "archiveLogs", EmitDefaultValue = true)]
        public bool ArchiveLogs { get; set; }

        /// <summary>
        /// Gets or Sets Artifactory
        /// </summary>
        [DataMember(Name = "artifactory", EmitDefaultValue = false)]
        public IoArgoprojWorkflowV1alpha1ArtifactoryArtifactRepository Artifactory { get; set; }

        /// <summary>
        /// Gets or Sets Azure
        /// </summary>
        [DataMember(Name = "azure", EmitDefaultValue = false)]
        public IoArgoprojWorkflowV1alpha1AzureArtifactRepository Azure { get; set; }

        /// <summary>
        /// Gets or Sets Gcs
        /// </summary>
        [DataMember(Name = "gcs", EmitDefaultValue = false)]
        public IoArgoprojWorkflowV1alpha1GCSArtifactRepository Gcs { get; set; }

        /// <summary>
        /// Gets or Sets Hdfs
        /// </summary>
        [DataMember(Name = "hdfs", EmitDefaultValue = false)]
        public IoArgoprojWorkflowV1alpha1HDFSArtifactRepository Hdfs { get; set; }

        /// <summary>
        /// Gets or Sets Oss
        /// </summary>
        [DataMember(Name = "oss", EmitDefaultValue = false)]
        public IoArgoprojWorkflowV1alpha1OSSArtifactRepository Oss { get; set; }

        /// <summary>
        /// Gets or Sets S3
        /// </summary>
        [DataMember(Name = "s3", EmitDefaultValue = false)]
        public IoArgoprojWorkflowV1alpha1S3ArtifactRepository S3 { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class IoArgoprojWorkflowV1alpha1ArtifactRepository {\n");
            sb.Append("  ArchiveLogs: ").Append(ArchiveLogs).Append("\n");
            sb.Append("  Artifactory: ").Append(Artifactory).Append("\n");
            sb.Append("  Azure: ").Append(Azure).Append("\n");
            sb.Append("  Gcs: ").Append(Gcs).Append("\n");
            sb.Append("  Hdfs: ").Append(Hdfs).Append("\n");
            sb.Append("  Oss: ").Append(Oss).Append("\n");
            sb.Append("  S3: ").Append(S3).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
