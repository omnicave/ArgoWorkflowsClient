/*
 * Argo Workflows API
 *
 * Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes. For more information, please see https://argoproj.github.io/argo-workflows/
 *
 * The version of the OpenAPI document: VERSION
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = ArgoWorkflowsClient.Client.OpenAPIDateConverter;

namespace ArgoWorkflowsClient.Model
{
    /// <summary>
    /// IoArgoprojEventsV1alpha1K8SResourcePolicy
    /// </summary>
    [DataContract(Name = "io.argoproj.events.v1alpha1.K8SResourcePolicy")]
    public partial class IoArgoprojEventsV1alpha1K8SResourcePolicy : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="IoArgoprojEventsV1alpha1K8SResourcePolicy" /> class.
        /// </summary>
        /// <param name="backoff">backoff.</param>
        /// <param name="errorOnBackoffTimeout">errorOnBackoffTimeout.</param>
        /// <param name="labels">labels.</param>
        public IoArgoprojEventsV1alpha1K8SResourcePolicy(IoArgoprojEventsV1alpha1Backoff backoff = default(IoArgoprojEventsV1alpha1Backoff), bool errorOnBackoffTimeout = default(bool), Dictionary<string, string> labels = default(Dictionary<string, string>))
        {
            this.Backoff = backoff;
            this.ErrorOnBackoffTimeout = errorOnBackoffTimeout;
            this.Labels = labels;
        }

        /// <summary>
        /// Gets or Sets Backoff
        /// </summary>
        [DataMember(Name = "backoff", EmitDefaultValue = false)]
        public IoArgoprojEventsV1alpha1Backoff Backoff { get; set; }

        /// <summary>
        /// Gets or Sets ErrorOnBackoffTimeout
        /// </summary>
        [DataMember(Name = "errorOnBackoffTimeout", EmitDefaultValue = true)]
        public bool ErrorOnBackoffTimeout { get; set; }

        /// <summary>
        /// Gets or Sets Labels
        /// </summary>
        [DataMember(Name = "labels", EmitDefaultValue = false)]
        public Dictionary<string, string> Labels { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class IoArgoprojEventsV1alpha1K8SResourcePolicy {\n");
            sb.Append("  Backoff: ").Append(Backoff).Append("\n");
            sb.Append("  ErrorOnBackoffTimeout: ").Append(ErrorOnBackoffTimeout).Append("\n");
            sb.Append("  Labels: ").Append(Labels).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
