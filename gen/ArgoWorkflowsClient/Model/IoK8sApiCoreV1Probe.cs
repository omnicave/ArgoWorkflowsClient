/*
 * Argo Workflows API
 *
 * Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes. For more information, please see https://argoproj.github.io/argo-workflows/
 *
 * The version of the OpenAPI document: VERSION
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = ArgoWorkflowsClient.Client.OpenAPIDateConverter;

namespace ArgoWorkflowsClient.Model
{
    /// <summary>
    /// Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic.
    /// </summary>
    [DataContract(Name = "io.k8s.api.core.v1.Probe")]
    public partial class IoK8sApiCoreV1Probe : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="IoK8sApiCoreV1Probe" /> class.
        /// </summary>
        /// <param name="exec">exec.</param>
        /// <param name="failureThreshold">Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1..</param>
        /// <param name="grpc">grpc.</param>
        /// <param name="httpGet">httpGet.</param>
        /// <param name="initialDelaySeconds">Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes.</param>
        /// <param name="periodSeconds">How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1..</param>
        /// <param name="successThreshold">Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1..</param>
        /// <param name="tcpSocket">tcpSocket.</param>
        /// <param name="terminationGracePeriodSeconds">Optional duration in seconds the pod needs to terminate gracefully upon probe failure. The grace period is the duration in seconds after the processes running in the pod are sent a termination signal and the time when the processes are forcibly halted with a kill signal. Set this value longer than the expected cleanup time for your process. If this value is nil, the pod&#39;s terminationGracePeriodSeconds will be used. Otherwise, this value overrides the value provided by the pod spec. Value must be non-negative integer. The value zero indicates stop immediately via the kill signal (no opportunity to shut down). This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate. Minimum value is 1. spec.terminationGracePeriodSeconds is used if unset..</param>
        /// <param name="timeoutSeconds">Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes.</param>
        public IoK8sApiCoreV1Probe(IoK8sApiCoreV1ExecAction exec = default(IoK8sApiCoreV1ExecAction), int failureThreshold = default(int), IoK8sApiCoreV1GRPCAction grpc = default(IoK8sApiCoreV1GRPCAction), IoK8sApiCoreV1HTTPGetAction httpGet = default(IoK8sApiCoreV1HTTPGetAction), int initialDelaySeconds = default(int), int periodSeconds = default(int), int successThreshold = default(int), IoK8sApiCoreV1TCPSocketAction tcpSocket = default(IoK8sApiCoreV1TCPSocketAction), int terminationGracePeriodSeconds = default(int), int timeoutSeconds = default(int))
        {
            this.Exec = exec;
            this.FailureThreshold = failureThreshold;
            this.Grpc = grpc;
            this.HttpGet = httpGet;
            this.InitialDelaySeconds = initialDelaySeconds;
            this.PeriodSeconds = periodSeconds;
            this.SuccessThreshold = successThreshold;
            this.TcpSocket = tcpSocket;
            this.TerminationGracePeriodSeconds = terminationGracePeriodSeconds;
            this.TimeoutSeconds = timeoutSeconds;
        }

        /// <summary>
        /// Gets or Sets Exec
        /// </summary>
        [DataMember(Name = "exec", EmitDefaultValue = false)]
        public IoK8sApiCoreV1ExecAction Exec { get; set; }

        /// <summary>
        /// Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
        /// </summary>
        /// <value>Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.</value>
        [DataMember(Name = "failureThreshold", EmitDefaultValue = false)]
        public int FailureThreshold { get; set; }

        /// <summary>
        /// Gets or Sets Grpc
        /// </summary>
        [DataMember(Name = "grpc", EmitDefaultValue = false)]
        public IoK8sApiCoreV1GRPCAction Grpc { get; set; }

        /// <summary>
        /// Gets or Sets HttpGet
        /// </summary>
        [DataMember(Name = "httpGet", EmitDefaultValue = false)]
        public IoK8sApiCoreV1HTTPGetAction HttpGet { get; set; }

        /// <summary>
        /// Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
        /// </summary>
        /// <value>Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes</value>
        [DataMember(Name = "initialDelaySeconds", EmitDefaultValue = false)]
        public int InitialDelaySeconds { get; set; }

        /// <summary>
        /// How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
        /// </summary>
        /// <value>How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.</value>
        [DataMember(Name = "periodSeconds", EmitDefaultValue = false)]
        public int PeriodSeconds { get; set; }

        /// <summary>
        /// Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
        /// </summary>
        /// <value>Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.</value>
        [DataMember(Name = "successThreshold", EmitDefaultValue = false)]
        public int SuccessThreshold { get; set; }

        /// <summary>
        /// Gets or Sets TcpSocket
        /// </summary>
        [DataMember(Name = "tcpSocket", EmitDefaultValue = false)]
        public IoK8sApiCoreV1TCPSocketAction TcpSocket { get; set; }

        /// <summary>
        /// Optional duration in seconds the pod needs to terminate gracefully upon probe failure. The grace period is the duration in seconds after the processes running in the pod are sent a termination signal and the time when the processes are forcibly halted with a kill signal. Set this value longer than the expected cleanup time for your process. If this value is nil, the pod&#39;s terminationGracePeriodSeconds will be used. Otherwise, this value overrides the value provided by the pod spec. Value must be non-negative integer. The value zero indicates stop immediately via the kill signal (no opportunity to shut down). This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate. Minimum value is 1. spec.terminationGracePeriodSeconds is used if unset.
        /// </summary>
        /// <value>Optional duration in seconds the pod needs to terminate gracefully upon probe failure. The grace period is the duration in seconds after the processes running in the pod are sent a termination signal and the time when the processes are forcibly halted with a kill signal. Set this value longer than the expected cleanup time for your process. If this value is nil, the pod&#39;s terminationGracePeriodSeconds will be used. Otherwise, this value overrides the value provided by the pod spec. Value must be non-negative integer. The value zero indicates stop immediately via the kill signal (no opportunity to shut down). This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate. Minimum value is 1. spec.terminationGracePeriodSeconds is used if unset.</value>
        [DataMember(Name = "terminationGracePeriodSeconds", EmitDefaultValue = false)]
        public int TerminationGracePeriodSeconds { get; set; }

        /// <summary>
        /// Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
        /// </summary>
        /// <value>Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes</value>
        [DataMember(Name = "timeoutSeconds", EmitDefaultValue = false)]
        public int TimeoutSeconds { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class IoK8sApiCoreV1Probe {\n");
            sb.Append("  Exec: ").Append(Exec).Append("\n");
            sb.Append("  FailureThreshold: ").Append(FailureThreshold).Append("\n");
            sb.Append("  Grpc: ").Append(Grpc).Append("\n");
            sb.Append("  HttpGet: ").Append(HttpGet).Append("\n");
            sb.Append("  InitialDelaySeconds: ").Append(InitialDelaySeconds).Append("\n");
            sb.Append("  PeriodSeconds: ").Append(PeriodSeconds).Append("\n");
            sb.Append("  SuccessThreshold: ").Append(SuccessThreshold).Append("\n");
            sb.Append("  TcpSocket: ").Append(TcpSocket).Append("\n");
            sb.Append("  TerminationGracePeriodSeconds: ").Append(TerminationGracePeriodSeconds).Append("\n");
            sb.Append("  TimeoutSeconds: ").Append(TimeoutSeconds).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
