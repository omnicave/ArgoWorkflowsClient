/*
 * Argo Workflows API
 *
 * Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes. For more information, please see https://argoproj.github.io/argo-workflows/
 *
 * The version of the OpenAPI document: VERSION
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = ArgoWorkflowsClient.Client.OpenAPIDateConverter;

namespace ArgoWorkflowsClient.Model
{
    /// <summary>
    /// The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)
    /// </summary>
    [DataContract(Name = "io.k8s.api.core.v1.WeightedPodAffinityTerm")]
    public partial class IoK8sApiCoreV1WeightedPodAffinityTerm : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="IoK8sApiCoreV1WeightedPodAffinityTerm" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected IoK8sApiCoreV1WeightedPodAffinityTerm() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="IoK8sApiCoreV1WeightedPodAffinityTerm" /> class.
        /// </summary>
        /// <param name="podAffinityTerm">podAffinityTerm (required).</param>
        /// <param name="weight">weight associated with matching the corresponding podAffinityTerm, in the range 1-100. (required).</param>
        public IoK8sApiCoreV1WeightedPodAffinityTerm(IoK8sApiCoreV1PodAffinityTerm podAffinityTerm = default(IoK8sApiCoreV1PodAffinityTerm), int weight = default(int))
        {
            // to ensure "podAffinityTerm" is required (not null)
            if (podAffinityTerm == null)
            {
                throw new ArgumentNullException("podAffinityTerm is a required property for IoK8sApiCoreV1WeightedPodAffinityTerm and cannot be null");
            }
            this.PodAffinityTerm = podAffinityTerm;
            this.Weight = weight;
        }

        /// <summary>
        /// Gets or Sets PodAffinityTerm
        /// </summary>
        [DataMember(Name = "podAffinityTerm", IsRequired = true, EmitDefaultValue = true)]
        public IoK8sApiCoreV1PodAffinityTerm PodAffinityTerm { get; set; }

        /// <summary>
        /// weight associated with matching the corresponding podAffinityTerm, in the range 1-100.
        /// </summary>
        /// <value>weight associated with matching the corresponding podAffinityTerm, in the range 1-100.</value>
        [DataMember(Name = "weight", IsRequired = true, EmitDefaultValue = true)]
        public int Weight { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class IoK8sApiCoreV1WeightedPodAffinityTerm {\n");
            sb.Append("  PodAffinityTerm: ").Append(PodAffinityTerm).Append("\n");
            sb.Append("  Weight: ").Append(Weight).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
