/*
 * Argo Workflows API
 *
 * Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes. For more information, please see https://argoproj.github.io/argo-workflows/
 *
 * The version of the OpenAPI document: VERSION
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = ArgoWorkflowsClient.Client.OpenAPIDateConverter;

namespace ArgoWorkflowsClient.Model
{
    /// <summary>
    /// Represents a Flocker volume mounted by the Flocker agent. One and only one of datasetName and datasetUUID should be set. Flocker volumes do not support ownership management or SELinux relabeling.
    /// </summary>
    [DataContract(Name = "io.k8s.api.core.v1.FlockerVolumeSource")]
    public partial class IoK8sApiCoreV1FlockerVolumeSource : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="IoK8sApiCoreV1FlockerVolumeSource" /> class.
        /// </summary>
        /// <param name="datasetName">Name of the dataset stored as metadata -&gt; name on the dataset for Flocker should be considered as deprecated.</param>
        /// <param name="datasetUUID">UUID of the dataset. This is unique identifier of a Flocker dataset.</param>
        public IoK8sApiCoreV1FlockerVolumeSource(string datasetName = default(string), string datasetUUID = default(string))
        {
            this.DatasetName = datasetName;
            this.DatasetUUID = datasetUUID;
        }

        /// <summary>
        /// Name of the dataset stored as metadata -&gt; name on the dataset for Flocker should be considered as deprecated
        /// </summary>
        /// <value>Name of the dataset stored as metadata -&gt; name on the dataset for Flocker should be considered as deprecated</value>
        [DataMember(Name = "datasetName", EmitDefaultValue = false)]
        public string DatasetName { get; set; }

        /// <summary>
        /// UUID of the dataset. This is unique identifier of a Flocker dataset
        /// </summary>
        /// <value>UUID of the dataset. This is unique identifier of a Flocker dataset</value>
        [DataMember(Name = "datasetUUID", EmitDefaultValue = false)]
        public string DatasetUUID { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class IoK8sApiCoreV1FlockerVolumeSource {\n");
            sb.Append("  DatasetName: ").Append(DatasetName).Append("\n");
            sb.Append("  DatasetUUID: ").Append(DatasetUUID).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
