/*
 * Argo Workflows API
 *
 * Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes. For more information, please see https://argoproj.github.io/argo-workflows/
 *
 * The version of the OpenAPI document: VERSION
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = ArgoWorkflowsClient.Client.OpenAPIDateConverter;

namespace ArgoWorkflowsClient.Model
{
    /// <summary>
    /// IoArgoprojWorkflowV1alpha1ArtifactRepositoryRefStatus
    /// </summary>
    [DataContract(Name = "io.argoproj.workflow.v1alpha1.ArtifactRepositoryRefStatus")]
    public partial class IoArgoprojWorkflowV1alpha1ArtifactRepositoryRefStatus : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="IoArgoprojWorkflowV1alpha1ArtifactRepositoryRefStatus" /> class.
        /// </summary>
        /// <param name="artifactRepository">artifactRepository.</param>
        /// <param name="configMap">The name of the config map. Defaults to \&quot;artifact-repositories\&quot;..</param>
        /// <param name="varDefault">If this ref represents the default artifact repository, rather than a config map..</param>
        /// <param name="key">The config map key. Defaults to the value of the \&quot;workflows.argoproj.io/default-artifact-repository\&quot; annotation..</param>
        /// <param name="varNamespace">The namespace of the config map. Defaults to the workflow&#39;s namespace, or the controller&#39;s namespace (if found)..</param>
        public IoArgoprojWorkflowV1alpha1ArtifactRepositoryRefStatus(IoArgoprojWorkflowV1alpha1ArtifactRepository artifactRepository = default(IoArgoprojWorkflowV1alpha1ArtifactRepository), string configMap = default(string), bool varDefault = default(bool), string key = default(string), string varNamespace = default(string))
        {
            this.ArtifactRepository = artifactRepository;
            this.ConfigMap = configMap;
            this.VarDefault = varDefault;
            this.Key = key;
            this.VarNamespace = varNamespace;
        }

        /// <summary>
        /// Gets or Sets ArtifactRepository
        /// </summary>
        [DataMember(Name = "artifactRepository", EmitDefaultValue = false)]
        public IoArgoprojWorkflowV1alpha1ArtifactRepository ArtifactRepository { get; set; }

        /// <summary>
        /// The name of the config map. Defaults to \&quot;artifact-repositories\&quot;.
        /// </summary>
        /// <value>The name of the config map. Defaults to \&quot;artifact-repositories\&quot;.</value>
        [DataMember(Name = "configMap", EmitDefaultValue = false)]
        public string ConfigMap { get; set; }

        /// <summary>
        /// If this ref represents the default artifact repository, rather than a config map.
        /// </summary>
        /// <value>If this ref represents the default artifact repository, rather than a config map.</value>
        [DataMember(Name = "default", EmitDefaultValue = true)]
        public bool VarDefault { get; set; }

        /// <summary>
        /// The config map key. Defaults to the value of the \&quot;workflows.argoproj.io/default-artifact-repository\&quot; annotation.
        /// </summary>
        /// <value>The config map key. Defaults to the value of the \&quot;workflows.argoproj.io/default-artifact-repository\&quot; annotation.</value>
        [DataMember(Name = "key", EmitDefaultValue = false)]
        public string Key { get; set; }

        /// <summary>
        /// The namespace of the config map. Defaults to the workflow&#39;s namespace, or the controller&#39;s namespace (if found).
        /// </summary>
        /// <value>The namespace of the config map. Defaults to the workflow&#39;s namespace, or the controller&#39;s namespace (if found).</value>
        [DataMember(Name = "namespace", EmitDefaultValue = false)]
        public string VarNamespace { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class IoArgoprojWorkflowV1alpha1ArtifactRepositoryRefStatus {\n");
            sb.Append("  ArtifactRepository: ").Append(ArtifactRepository).Append("\n");
            sb.Append("  ConfigMap: ").Append(ConfigMap).Append("\n");
            sb.Append("  VarDefault: ").Append(VarDefault).Append("\n");
            sb.Append("  Key: ").Append(Key).Append("\n");
            sb.Append("  VarNamespace: ").Append(VarNamespace).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
