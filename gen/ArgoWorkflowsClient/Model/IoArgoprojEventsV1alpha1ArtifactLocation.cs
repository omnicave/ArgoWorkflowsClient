/*
 * Argo Workflows API
 *
 * Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes. For more information, please see https://argoproj.github.io/argo-workflows/
 *
 * The version of the OpenAPI document: VERSION
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = ArgoWorkflowsClient.Client.OpenAPIDateConverter;

namespace ArgoWorkflowsClient.Model
{
    /// <summary>
    /// IoArgoprojEventsV1alpha1ArtifactLocation
    /// </summary>
    [DataContract(Name = "io.argoproj.events.v1alpha1.ArtifactLocation")]
    public partial class IoArgoprojEventsV1alpha1ArtifactLocation : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="IoArgoprojEventsV1alpha1ArtifactLocation" /> class.
        /// </summary>
        /// <param name="configmap">configmap.</param>
        /// <param name="file">file.</param>
        /// <param name="git">git.</param>
        /// <param name="inline">inline.</param>
        /// <param name="resource">resource.</param>
        /// <param name="s3">s3.</param>
        /// <param name="url">url.</param>
        public IoArgoprojEventsV1alpha1ArtifactLocation(IoK8sApiCoreV1ConfigMapKeySelector configmap = default(IoK8sApiCoreV1ConfigMapKeySelector), IoArgoprojEventsV1alpha1FileArtifact file = default(IoArgoprojEventsV1alpha1FileArtifact), IoArgoprojEventsV1alpha1GitArtifact git = default(IoArgoprojEventsV1alpha1GitArtifact), string inline = default(string), IoArgoprojEventsV1alpha1Resource resource = default(IoArgoprojEventsV1alpha1Resource), IoArgoprojEventsV1alpha1S3Artifact s3 = default(IoArgoprojEventsV1alpha1S3Artifact), IoArgoprojEventsV1alpha1URLArtifact url = default(IoArgoprojEventsV1alpha1URLArtifact))
        {
            this.Configmap = configmap;
            this.File = file;
            this.Git = git;
            this.Inline = inline;
            this.Resource = resource;
            this.S3 = s3;
            this.Url = url;
        }

        /// <summary>
        /// Gets or Sets Configmap
        /// </summary>
        [DataMember(Name = "configmap", EmitDefaultValue = false)]
        public IoK8sApiCoreV1ConfigMapKeySelector Configmap { get; set; }

        /// <summary>
        /// Gets or Sets File
        /// </summary>
        [DataMember(Name = "file", EmitDefaultValue = false)]
        public IoArgoprojEventsV1alpha1FileArtifact File { get; set; }

        /// <summary>
        /// Gets or Sets Git
        /// </summary>
        [DataMember(Name = "git", EmitDefaultValue = false)]
        public IoArgoprojEventsV1alpha1GitArtifact Git { get; set; }

        /// <summary>
        /// Gets or Sets Inline
        /// </summary>
        [DataMember(Name = "inline", EmitDefaultValue = false)]
        public string Inline { get; set; }

        /// <summary>
        /// Gets or Sets Resource
        /// </summary>
        [DataMember(Name = "resource", EmitDefaultValue = false)]
        public IoArgoprojEventsV1alpha1Resource Resource { get; set; }

        /// <summary>
        /// Gets or Sets S3
        /// </summary>
        [DataMember(Name = "s3", EmitDefaultValue = false)]
        public IoArgoprojEventsV1alpha1S3Artifact S3 { get; set; }

        /// <summary>
        /// Gets or Sets Url
        /// </summary>
        [DataMember(Name = "url", EmitDefaultValue = false)]
        public IoArgoprojEventsV1alpha1URLArtifact Url { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class IoArgoprojEventsV1alpha1ArtifactLocation {\n");
            sb.Append("  Configmap: ").Append(Configmap).Append("\n");
            sb.Append("  File: ").Append(File).Append("\n");
            sb.Append("  Git: ").Append(Git).Append("\n");
            sb.Append("  Inline: ").Append(Inline).Append("\n");
            sb.Append("  Resource: ").Append(Resource).Append("\n");
            sb.Append("  S3: ").Append(S3).Append("\n");
            sb.Append("  Url: ").Append(Url).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
