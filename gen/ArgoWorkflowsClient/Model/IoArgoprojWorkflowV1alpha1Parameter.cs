/*
 * Argo Workflows API
 *
 * Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes. For more information, please see https://argoproj.github.io/argo-workflows/
 *
 * The version of the OpenAPI document: VERSION
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = ArgoWorkflowsClient.Client.OpenAPIDateConverter;

namespace ArgoWorkflowsClient.Model
{
    /// <summary>
    /// Parameter indicate a passed string parameter to a service template with an optional default value
    /// </summary>
    [DataContract(Name = "io.argoproj.workflow.v1alpha1.Parameter")]
    public partial class IoArgoprojWorkflowV1alpha1Parameter : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="IoArgoprojWorkflowV1alpha1Parameter" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected IoArgoprojWorkflowV1alpha1Parameter() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="IoArgoprojWorkflowV1alpha1Parameter" /> class.
        /// </summary>
        /// <param name="varDefault">Default is the default value to use for an input parameter if a value was not supplied.</param>
        /// <param name="description">Description is the parameter description.</param>
        /// <param name="varEnum">Enum holds a list of string values to choose from, for the actual value of the parameter.</param>
        /// <param name="globalName">GlobalName exports an output parameter to the global scope, making it available as &#39;{{io.argoproj.workflow.v1alpha1.outputs.parameters.XXXX}} and in workflow.status.outputs.parameters.</param>
        /// <param name="name">Name is the parameter name (required).</param>
        /// <param name="value">Value is the literal value to use for the parameter. If specified in the context of an input parameter, the value takes precedence over any passed values.</param>
        /// <param name="valueFrom">valueFrom.</param>
        public IoArgoprojWorkflowV1alpha1Parameter(string varDefault = default(string), string description = default(string), List<string> varEnum = default(List<string>), string globalName = default(string), string name = default(string), string value = default(string), IoArgoprojWorkflowV1alpha1ValueFrom valueFrom = default(IoArgoprojWorkflowV1alpha1ValueFrom))
        {
            // to ensure "name" is required (not null)
            if (name == null)
            {
                throw new ArgumentNullException("name is a required property for IoArgoprojWorkflowV1alpha1Parameter and cannot be null");
            }
            this.Name = name;
            this.VarDefault = varDefault;
            this.Description = description;
            this.VarEnum = varEnum;
            this.GlobalName = globalName;
            this.Value = value;
            this.ValueFrom = valueFrom;
        }

        /// <summary>
        /// Default is the default value to use for an input parameter if a value was not supplied
        /// </summary>
        /// <value>Default is the default value to use for an input parameter if a value was not supplied</value>
        [DataMember(Name = "default", EmitDefaultValue = false)]
        public string VarDefault { get; set; }

        /// <summary>
        /// Description is the parameter description
        /// </summary>
        /// <value>Description is the parameter description</value>
        [DataMember(Name = "description", EmitDefaultValue = false)]
        public string Description { get; set; }

        /// <summary>
        /// Enum holds a list of string values to choose from, for the actual value of the parameter
        /// </summary>
        /// <value>Enum holds a list of string values to choose from, for the actual value of the parameter</value>
        [DataMember(Name = "enum", EmitDefaultValue = false)]
        public List<string> VarEnum { get; set; }

        /// <summary>
        /// GlobalName exports an output parameter to the global scope, making it available as &#39;{{io.argoproj.workflow.v1alpha1.outputs.parameters.XXXX}} and in workflow.status.outputs.parameters
        /// </summary>
        /// <value>GlobalName exports an output parameter to the global scope, making it available as &#39;{{io.argoproj.workflow.v1alpha1.outputs.parameters.XXXX}} and in workflow.status.outputs.parameters</value>
        [DataMember(Name = "globalName", EmitDefaultValue = false)]
        public string GlobalName { get; set; }

        /// <summary>
        /// Name is the parameter name
        /// </summary>
        /// <value>Name is the parameter name</value>
        [DataMember(Name = "name", IsRequired = true, EmitDefaultValue = true)]
        public string Name { get; set; }

        /// <summary>
        /// Value is the literal value to use for the parameter. If specified in the context of an input parameter, the value takes precedence over any passed values
        /// </summary>
        /// <value>Value is the literal value to use for the parameter. If specified in the context of an input parameter, the value takes precedence over any passed values</value>
        [DataMember(Name = "value", EmitDefaultValue = false)]
        public string Value { get; set; }

        /// <summary>
        /// Gets or Sets ValueFrom
        /// </summary>
        [DataMember(Name = "valueFrom", EmitDefaultValue = false)]
        public IoArgoprojWorkflowV1alpha1ValueFrom ValueFrom { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class IoArgoprojWorkflowV1alpha1Parameter {\n");
            sb.Append("  VarDefault: ").Append(VarDefault).Append("\n");
            sb.Append("  Description: ").Append(Description).Append("\n");
            sb.Append("  VarEnum: ").Append(VarEnum).Append("\n");
            sb.Append("  GlobalName: ").Append(GlobalName).Append("\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  Value: ").Append(Value).Append("\n");
            sb.Append("  ValueFrom: ").Append(ValueFrom).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
