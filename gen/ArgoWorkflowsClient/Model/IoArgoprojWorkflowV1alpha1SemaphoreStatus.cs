/*
 * Argo Workflows API
 *
 * Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes. For more information, please see https://argoproj.github.io/argo-workflows/
 *
 * The version of the OpenAPI document: VERSION
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = ArgoWorkflowsClient.Client.OpenAPIDateConverter;

namespace ArgoWorkflowsClient.Model
{
    /// <summary>
    /// IoArgoprojWorkflowV1alpha1SemaphoreStatus
    /// </summary>
    [DataContract(Name = "io.argoproj.workflow.v1alpha1.SemaphoreStatus")]
    public partial class IoArgoprojWorkflowV1alpha1SemaphoreStatus : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="IoArgoprojWorkflowV1alpha1SemaphoreStatus" /> class.
        /// </summary>
        /// <param name="holding">Holding stores the list of resource acquired synchronization lock for workflows..</param>
        /// <param name="waiting">Waiting indicates the list of current synchronization lock holders..</param>
        public IoArgoprojWorkflowV1alpha1SemaphoreStatus(List<IoArgoprojWorkflowV1alpha1SemaphoreHolding> holding = default(List<IoArgoprojWorkflowV1alpha1SemaphoreHolding>), List<IoArgoprojWorkflowV1alpha1SemaphoreHolding> waiting = default(List<IoArgoprojWorkflowV1alpha1SemaphoreHolding>))
        {
            this.Holding = holding;
            this.Waiting = waiting;
        }

        /// <summary>
        /// Holding stores the list of resource acquired synchronization lock for workflows.
        /// </summary>
        /// <value>Holding stores the list of resource acquired synchronization lock for workflows.</value>
        [DataMember(Name = "holding", EmitDefaultValue = false)]
        public List<IoArgoprojWorkflowV1alpha1SemaphoreHolding> Holding { get; set; }

        /// <summary>
        /// Waiting indicates the list of current synchronization lock holders.
        /// </summary>
        /// <value>Waiting indicates the list of current synchronization lock holders.</value>
        [DataMember(Name = "waiting", EmitDefaultValue = false)]
        public List<IoArgoprojWorkflowV1alpha1SemaphoreHolding> Waiting { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class IoArgoprojWorkflowV1alpha1SemaphoreStatus {\n");
            sb.Append("  Holding: ").Append(Holding).Append("\n");
            sb.Append("  Waiting: ").Append(Waiting).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
