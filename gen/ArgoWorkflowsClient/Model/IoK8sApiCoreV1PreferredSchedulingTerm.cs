/*
 * Argo Workflows API
 *
 * Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes. For more information, please see https://argoproj.github.io/argo-workflows/
 *
 * The version of the OpenAPI document: VERSION
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = ArgoWorkflowsClient.Client.OpenAPIDateConverter;

namespace ArgoWorkflowsClient.Model
{
    /// <summary>
    /// An empty preferred scheduling term matches all objects with implicit weight 0 (i.e. it&#39;s a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op).
    /// </summary>
    [DataContract(Name = "io.k8s.api.core.v1.PreferredSchedulingTerm")]
    public partial class IoK8sApiCoreV1PreferredSchedulingTerm : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="IoK8sApiCoreV1PreferredSchedulingTerm" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected IoK8sApiCoreV1PreferredSchedulingTerm() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="IoK8sApiCoreV1PreferredSchedulingTerm" /> class.
        /// </summary>
        /// <param name="preference">preference (required).</param>
        /// <param name="weight">Weight associated with matching the corresponding nodeSelectorTerm, in the range 1-100. (required).</param>
        public IoK8sApiCoreV1PreferredSchedulingTerm(IoK8sApiCoreV1NodeSelectorTerm preference = default(IoK8sApiCoreV1NodeSelectorTerm), int weight = default(int))
        {
            // to ensure "preference" is required (not null)
            if (preference == null)
            {
                throw new ArgumentNullException("preference is a required property for IoK8sApiCoreV1PreferredSchedulingTerm and cannot be null");
            }
            this.Preference = preference;
            this.Weight = weight;
        }

        /// <summary>
        /// Gets or Sets Preference
        /// </summary>
        [DataMember(Name = "preference", IsRequired = true, EmitDefaultValue = true)]
        public IoK8sApiCoreV1NodeSelectorTerm Preference { get; set; }

        /// <summary>
        /// Weight associated with matching the corresponding nodeSelectorTerm, in the range 1-100.
        /// </summary>
        /// <value>Weight associated with matching the corresponding nodeSelectorTerm, in the range 1-100.</value>
        [DataMember(Name = "weight", IsRequired = true, EmitDefaultValue = true)]
        public int Weight { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class IoK8sApiCoreV1PreferredSchedulingTerm {\n");
            sb.Append("  Preference: ").Append(Preference).Append("\n");
            sb.Append("  Weight: ").Append(Weight).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
