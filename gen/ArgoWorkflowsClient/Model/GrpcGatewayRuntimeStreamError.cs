/*
 * Argo Workflows API
 *
 * Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes. For more information, please see https://argoproj.github.io/argo-workflows/
 *
 * The version of the OpenAPI document: VERSION
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = ArgoWorkflowsClient.Client.OpenAPIDateConverter;

namespace ArgoWorkflowsClient.Model
{
    /// <summary>
    /// GrpcGatewayRuntimeStreamError
    /// </summary>
    [DataContract(Name = "grpc.gateway.runtime.StreamError")]
    public partial class GrpcGatewayRuntimeStreamError : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="GrpcGatewayRuntimeStreamError" /> class.
        /// </summary>
        /// <param name="details">details.</param>
        /// <param name="grpcCode">grpcCode.</param>
        /// <param name="httpCode">httpCode.</param>
        /// <param name="httpStatus">httpStatus.</param>
        /// <param name="message">message.</param>
        public GrpcGatewayRuntimeStreamError(List<GoogleProtobufAny> details = default(List<GoogleProtobufAny>), int grpcCode = default(int), int httpCode = default(int), string httpStatus = default(string), string message = default(string))
        {
            this.Details = details;
            this.GrpcCode = grpcCode;
            this.HttpCode = httpCode;
            this.HttpStatus = httpStatus;
            this.Message = message;
        }

        /// <summary>
        /// Gets or Sets Details
        /// </summary>
        [DataMember(Name = "details", EmitDefaultValue = false)]
        public List<GoogleProtobufAny> Details { get; set; }

        /// <summary>
        /// Gets or Sets GrpcCode
        /// </summary>
        [DataMember(Name = "grpc_code", EmitDefaultValue = false)]
        public int GrpcCode { get; set; }

        /// <summary>
        /// Gets or Sets HttpCode
        /// </summary>
        [DataMember(Name = "http_code", EmitDefaultValue = false)]
        public int HttpCode { get; set; }

        /// <summary>
        /// Gets or Sets HttpStatus
        /// </summary>
        [DataMember(Name = "http_status", EmitDefaultValue = false)]
        public string HttpStatus { get; set; }

        /// <summary>
        /// Gets or Sets Message
        /// </summary>
        [DataMember(Name = "message", EmitDefaultValue = false)]
        public string Message { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class GrpcGatewayRuntimeStreamError {\n");
            sb.Append("  Details: ").Append(Details).Append("\n");
            sb.Append("  GrpcCode: ").Append(GrpcCode).Append("\n");
            sb.Append("  HttpCode: ").Append(HttpCode).Append("\n");
            sb.Append("  HttpStatus: ").Append(HttpStatus).Append("\n");
            sb.Append("  Message: ").Append(Message).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
