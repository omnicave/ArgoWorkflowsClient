/*
 * Argo Workflows API
 *
 * Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes. For more information, please see https://argoproj.github.io/argo-workflows/
 *
 * The version of the OpenAPI document: VERSION
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = ArgoWorkflowsClient.Client.OpenAPIDateConverter;

namespace ArgoWorkflowsClient.Model
{
    /// <summary>
    /// GCSArtifactRepository defines the controller configuration for a GCS artifact repository
    /// </summary>
    [DataContract(Name = "io.argoproj.workflow.v1alpha1.GCSArtifactRepository")]
    public partial class IoArgoprojWorkflowV1alpha1GCSArtifactRepository : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="IoArgoprojWorkflowV1alpha1GCSArtifactRepository" /> class.
        /// </summary>
        /// <param name="bucket">Bucket is the name of the bucket.</param>
        /// <param name="keyFormat">KeyFormat defines the format of how to store keys and can reference workflow variables..</param>
        /// <param name="serviceAccountKeySecret">serviceAccountKeySecret.</param>
        public IoArgoprojWorkflowV1alpha1GCSArtifactRepository(string bucket = default(string), string keyFormat = default(string), IoK8sApiCoreV1SecretKeySelector serviceAccountKeySecret = default(IoK8sApiCoreV1SecretKeySelector))
        {
            this.Bucket = bucket;
            this.KeyFormat = keyFormat;
            this.ServiceAccountKeySecret = serviceAccountKeySecret;
        }

        /// <summary>
        /// Bucket is the name of the bucket
        /// </summary>
        /// <value>Bucket is the name of the bucket</value>
        [DataMember(Name = "bucket", EmitDefaultValue = false)]
        public string Bucket { get; set; }

        /// <summary>
        /// KeyFormat defines the format of how to store keys and can reference workflow variables.
        /// </summary>
        /// <value>KeyFormat defines the format of how to store keys and can reference workflow variables.</value>
        [DataMember(Name = "keyFormat", EmitDefaultValue = false)]
        public string KeyFormat { get; set; }

        /// <summary>
        /// Gets or Sets ServiceAccountKeySecret
        /// </summary>
        [DataMember(Name = "serviceAccountKeySecret", EmitDefaultValue = false)]
        public IoK8sApiCoreV1SecretKeySelector ServiceAccountKeySecret { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class IoArgoprojWorkflowV1alpha1GCSArtifactRepository {\n");
            sb.Append("  Bucket: ").Append(Bucket).Append("\n");
            sb.Append("  KeyFormat: ").Append(KeyFormat).Append("\n");
            sb.Append("  ServiceAccountKeySecret: ").Append(ServiceAccountKeySecret).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
