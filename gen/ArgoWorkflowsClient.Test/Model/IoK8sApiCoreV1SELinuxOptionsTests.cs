/*
 * Argo Workflows API
 *
 * Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes. For more information, please see https://argoproj.github.io/argo-workflows/
 *
 * The version of the OpenAPI document: VERSION
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using ArgoWorkflowsClient.Model;
using ArgoWorkflowsClient.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace ArgoWorkflowsClient.Test.Model
{
    /// <summary>
    ///  Class for testing IoK8sApiCoreV1SELinuxOptions
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class IoK8sApiCoreV1SELinuxOptionsTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for IoK8sApiCoreV1SELinuxOptions
        //private IoK8sApiCoreV1SELinuxOptions instance;

        public IoK8sApiCoreV1SELinuxOptionsTests()
        {
            // TODO uncomment below to create an instance of IoK8sApiCoreV1SELinuxOptions
            //instance = new IoK8sApiCoreV1SELinuxOptions();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of IoK8sApiCoreV1SELinuxOptions
        /// </summary>
        [Fact]
        public void IoK8sApiCoreV1SELinuxOptionsInstanceTest()
        {
            // TODO uncomment below to test "IsType" IoK8sApiCoreV1SELinuxOptions
            //Assert.IsType<IoK8sApiCoreV1SELinuxOptions>(instance);
        }

        /// <summary>
        /// Test the property 'Level'
        /// </summary>
        [Fact]
        public void LevelTest()
        {
            // TODO unit test for the property 'Level'
        }

        /// <summary>
        /// Test the property 'Role'
        /// </summary>
        [Fact]
        public void RoleTest()
        {
            // TODO unit test for the property 'Role'
        }

        /// <summary>
        /// Test the property 'Type'
        /// </summary>
        [Fact]
        public void TypeTest()
        {
            // TODO unit test for the property 'Type'
        }

        /// <summary>
        /// Test the property 'User'
        /// </summary>
        [Fact]
        public void UserTest()
        {
            // TODO unit test for the property 'User'
        }
    }
}
