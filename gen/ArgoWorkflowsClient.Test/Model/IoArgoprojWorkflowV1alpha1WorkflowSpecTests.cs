/*
 * Argo Workflows API
 *
 * Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes. For more information, please see https://argoproj.github.io/argo-workflows/
 *
 * The version of the OpenAPI document: VERSION
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using ArgoWorkflowsClient.Model;
using ArgoWorkflowsClient.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace ArgoWorkflowsClient.Test.Model
{
    /// <summary>
    ///  Class for testing IoArgoprojWorkflowV1alpha1WorkflowSpec
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class IoArgoprojWorkflowV1alpha1WorkflowSpecTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for IoArgoprojWorkflowV1alpha1WorkflowSpec
        //private IoArgoprojWorkflowV1alpha1WorkflowSpec instance;

        public IoArgoprojWorkflowV1alpha1WorkflowSpecTests()
        {
            // TODO uncomment below to create an instance of IoArgoprojWorkflowV1alpha1WorkflowSpec
            //instance = new IoArgoprojWorkflowV1alpha1WorkflowSpec();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of IoArgoprojWorkflowV1alpha1WorkflowSpec
        /// </summary>
        [Fact]
        public void IoArgoprojWorkflowV1alpha1WorkflowSpecInstanceTest()
        {
            // TODO uncomment below to test "IsType" IoArgoprojWorkflowV1alpha1WorkflowSpec
            //Assert.IsType<IoArgoprojWorkflowV1alpha1WorkflowSpec>(instance);
        }

        /// <summary>
        /// Test the property 'ActiveDeadlineSeconds'
        /// </summary>
        [Fact]
        public void ActiveDeadlineSecondsTest()
        {
            // TODO unit test for the property 'ActiveDeadlineSeconds'
        }

        /// <summary>
        /// Test the property 'Affinity'
        /// </summary>
        [Fact]
        public void AffinityTest()
        {
            // TODO unit test for the property 'Affinity'
        }

        /// <summary>
        /// Test the property 'ArchiveLogs'
        /// </summary>
        [Fact]
        public void ArchiveLogsTest()
        {
            // TODO unit test for the property 'ArchiveLogs'
        }

        /// <summary>
        /// Test the property 'Arguments'
        /// </summary>
        [Fact]
        public void ArgumentsTest()
        {
            // TODO unit test for the property 'Arguments'
        }

        /// <summary>
        /// Test the property 'ArtifactGC'
        /// </summary>
        [Fact]
        public void ArtifactGCTest()
        {
            // TODO unit test for the property 'ArtifactGC'
        }

        /// <summary>
        /// Test the property 'ArtifactRepositoryRef'
        /// </summary>
        [Fact]
        public void ArtifactRepositoryRefTest()
        {
            // TODO unit test for the property 'ArtifactRepositoryRef'
        }

        /// <summary>
        /// Test the property 'AutomountServiceAccountToken'
        /// </summary>
        [Fact]
        public void AutomountServiceAccountTokenTest()
        {
            // TODO unit test for the property 'AutomountServiceAccountToken'
        }

        /// <summary>
        /// Test the property 'DnsConfig'
        /// </summary>
        [Fact]
        public void DnsConfigTest()
        {
            // TODO unit test for the property 'DnsConfig'
        }

        /// <summary>
        /// Test the property 'DnsPolicy'
        /// </summary>
        [Fact]
        public void DnsPolicyTest()
        {
            // TODO unit test for the property 'DnsPolicy'
        }

        /// <summary>
        /// Test the property 'Entrypoint'
        /// </summary>
        [Fact]
        public void EntrypointTest()
        {
            // TODO unit test for the property 'Entrypoint'
        }

        /// <summary>
        /// Test the property 'Executor'
        /// </summary>
        [Fact]
        public void ExecutorTest()
        {
            // TODO unit test for the property 'Executor'
        }

        /// <summary>
        /// Test the property 'Hooks'
        /// </summary>
        [Fact]
        public void HooksTest()
        {
            // TODO unit test for the property 'Hooks'
        }

        /// <summary>
        /// Test the property 'HostAliases'
        /// </summary>
        [Fact]
        public void HostAliasesTest()
        {
            // TODO unit test for the property 'HostAliases'
        }

        /// <summary>
        /// Test the property 'HostNetwork'
        /// </summary>
        [Fact]
        public void HostNetworkTest()
        {
            // TODO unit test for the property 'HostNetwork'
        }

        /// <summary>
        /// Test the property 'ImagePullSecrets'
        /// </summary>
        [Fact]
        public void ImagePullSecretsTest()
        {
            // TODO unit test for the property 'ImagePullSecrets'
        }

        /// <summary>
        /// Test the property 'Metrics'
        /// </summary>
        [Fact]
        public void MetricsTest()
        {
            // TODO unit test for the property 'Metrics'
        }

        /// <summary>
        /// Test the property 'NodeSelector'
        /// </summary>
        [Fact]
        public void NodeSelectorTest()
        {
            // TODO unit test for the property 'NodeSelector'
        }

        /// <summary>
        /// Test the property 'OnExit'
        /// </summary>
        [Fact]
        public void OnExitTest()
        {
            // TODO unit test for the property 'OnExit'
        }

        /// <summary>
        /// Test the property 'Parallelism'
        /// </summary>
        [Fact]
        public void ParallelismTest()
        {
            // TODO unit test for the property 'Parallelism'
        }

        /// <summary>
        /// Test the property 'PodDisruptionBudget'
        /// </summary>
        [Fact]
        public void PodDisruptionBudgetTest()
        {
            // TODO unit test for the property 'PodDisruptionBudget'
        }

        /// <summary>
        /// Test the property 'PodGC'
        /// </summary>
        [Fact]
        public void PodGCTest()
        {
            // TODO unit test for the property 'PodGC'
        }

        /// <summary>
        /// Test the property 'PodMetadata'
        /// </summary>
        [Fact]
        public void PodMetadataTest()
        {
            // TODO unit test for the property 'PodMetadata'
        }

        /// <summary>
        /// Test the property 'PodPriority'
        /// </summary>
        [Fact]
        public void PodPriorityTest()
        {
            // TODO unit test for the property 'PodPriority'
        }

        /// <summary>
        /// Test the property 'PodPriorityClassName'
        /// </summary>
        [Fact]
        public void PodPriorityClassNameTest()
        {
            // TODO unit test for the property 'PodPriorityClassName'
        }

        /// <summary>
        /// Test the property 'PodSpecPatch'
        /// </summary>
        [Fact]
        public void PodSpecPatchTest()
        {
            // TODO unit test for the property 'PodSpecPatch'
        }

        /// <summary>
        /// Test the property 'Priority'
        /// </summary>
        [Fact]
        public void PriorityTest()
        {
            // TODO unit test for the property 'Priority'
        }

        /// <summary>
        /// Test the property 'RetryStrategy'
        /// </summary>
        [Fact]
        public void RetryStrategyTest()
        {
            // TODO unit test for the property 'RetryStrategy'
        }

        /// <summary>
        /// Test the property 'SchedulerName'
        /// </summary>
        [Fact]
        public void SchedulerNameTest()
        {
            // TODO unit test for the property 'SchedulerName'
        }

        /// <summary>
        /// Test the property 'SecurityContext'
        /// </summary>
        [Fact]
        public void SecurityContextTest()
        {
            // TODO unit test for the property 'SecurityContext'
        }

        /// <summary>
        /// Test the property 'ServiceAccountName'
        /// </summary>
        [Fact]
        public void ServiceAccountNameTest()
        {
            // TODO unit test for the property 'ServiceAccountName'
        }

        /// <summary>
        /// Test the property 'Shutdown'
        /// </summary>
        [Fact]
        public void ShutdownTest()
        {
            // TODO unit test for the property 'Shutdown'
        }

        /// <summary>
        /// Test the property 'Suspend'
        /// </summary>
        [Fact]
        public void SuspendTest()
        {
            // TODO unit test for the property 'Suspend'
        }

        /// <summary>
        /// Test the property 'Synchronization'
        /// </summary>
        [Fact]
        public void SynchronizationTest()
        {
            // TODO unit test for the property 'Synchronization'
        }

        /// <summary>
        /// Test the property 'TemplateDefaults'
        /// </summary>
        [Fact]
        public void TemplateDefaultsTest()
        {
            // TODO unit test for the property 'TemplateDefaults'
        }

        /// <summary>
        /// Test the property 'Templates'
        /// </summary>
        [Fact]
        public void TemplatesTest()
        {
            // TODO unit test for the property 'Templates'
        }

        /// <summary>
        /// Test the property 'Tolerations'
        /// </summary>
        [Fact]
        public void TolerationsTest()
        {
            // TODO unit test for the property 'Tolerations'
        }

        /// <summary>
        /// Test the property 'TtlStrategy'
        /// </summary>
        [Fact]
        public void TtlStrategyTest()
        {
            // TODO unit test for the property 'TtlStrategy'
        }

        /// <summary>
        /// Test the property 'VolumeClaimGC'
        /// </summary>
        [Fact]
        public void VolumeClaimGCTest()
        {
            // TODO unit test for the property 'VolumeClaimGC'
        }

        /// <summary>
        /// Test the property 'VolumeClaimTemplates'
        /// </summary>
        [Fact]
        public void VolumeClaimTemplatesTest()
        {
            // TODO unit test for the property 'VolumeClaimTemplates'
        }

        /// <summary>
        /// Test the property 'Volumes'
        /// </summary>
        [Fact]
        public void VolumesTest()
        {
            // TODO unit test for the property 'Volumes'
        }

        /// <summary>
        /// Test the property 'WorkflowMetadata'
        /// </summary>
        [Fact]
        public void WorkflowMetadataTest()
        {
            // TODO unit test for the property 'WorkflowMetadata'
        }

        /// <summary>
        /// Test the property 'WorkflowTemplateRef'
        /// </summary>
        [Fact]
        public void WorkflowTemplateRefTest()
        {
            // TODO unit test for the property 'WorkflowTemplateRef'
        }
    }
}
