/*
 * Argo Workflows API
 *
 * Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes. For more information, please see https://argoproj.github.io/argo-workflows/
 *
 * The version of the OpenAPI document: VERSION
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using ArgoWorkflowsClient.Client;
using ArgoWorkflowsClient.Api;
// uncomment below to import models
//using ArgoWorkflowsClient.Model;

namespace ArgoWorkflowsClient.Test.Api
{
    /// <summary>
    ///  Class for testing EventServiceApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class EventServiceApiTests : IDisposable
    {
        private EventServiceApi instance;

        public EventServiceApiTests()
        {
            instance = new EventServiceApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of EventServiceApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' EventServiceApi
            //Assert.IsType<EventServiceApi>(instance);
        }

        /// <summary>
        /// Test EventServiceListWorkflowEventBindings
        /// </summary>
        [Fact]
        public void EventServiceListWorkflowEventBindingsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string varNamespace = null;
            //string? listOptionsLabelSelector = null;
            //string? listOptionsFieldSelector = null;
            //bool? listOptionsWatch = null;
            //bool? listOptionsAllowWatchBookmarks = null;
            //string? listOptionsResourceVersion = null;
            //string? listOptionsResourceVersionMatch = null;
            //string? listOptionsTimeoutSeconds = null;
            //string? listOptionsLimit = null;
            //string? listOptionsContinue = null;
            //var response = instance.EventServiceListWorkflowEventBindings(varNamespace, listOptionsLabelSelector, listOptionsFieldSelector, listOptionsWatch, listOptionsAllowWatchBookmarks, listOptionsResourceVersion, listOptionsResourceVersionMatch, listOptionsTimeoutSeconds, listOptionsLimit, listOptionsContinue);
            //Assert.IsType<IoArgoprojWorkflowV1alpha1WorkflowEventBindingList>(response);
        }

        /// <summary>
        /// Test EventServiceReceiveEvent
        /// </summary>
        [Fact]
        public void EventServiceReceiveEventTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string varNamespace = null;
            //string discriminator = null;
            //Object body = null;
            //var response = instance.EventServiceReceiveEvent(varNamespace, discriminator, body);
            //Assert.IsType<Object>(response);
        }
    }
}
