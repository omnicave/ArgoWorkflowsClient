/*
 * Argo Workflows API
 *
 * Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes. For more information, please see https://argoproj.github.io/argo-workflows/
 *
 * The version of the OpenAPI document: VERSION
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using ArgoWorkflowsClient.Client;
using ArgoWorkflowsClient.Api;
// uncomment below to import models
//using ArgoWorkflowsClient.Model;

namespace ArgoWorkflowsClient.Test.Api
{
    /// <summary>
    ///  Class for testing WorkflowTemplateServiceApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class WorkflowTemplateServiceApiTests : IDisposable
    {
        private WorkflowTemplateServiceApi instance;

        public WorkflowTemplateServiceApiTests()
        {
            instance = new WorkflowTemplateServiceApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of WorkflowTemplateServiceApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' WorkflowTemplateServiceApi
            //Assert.IsType<WorkflowTemplateServiceApi>(instance);
        }

        /// <summary>
        /// Test WorkflowTemplateServiceCreateWorkflowTemplate
        /// </summary>
        [Fact]
        public void WorkflowTemplateServiceCreateWorkflowTemplateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string varNamespace = null;
            //IoArgoprojWorkflowV1alpha1WorkflowTemplateCreateRequest body = null;
            //var response = instance.WorkflowTemplateServiceCreateWorkflowTemplate(varNamespace, body);
            //Assert.IsType<IoArgoprojWorkflowV1alpha1WorkflowTemplate>(response);
        }

        /// <summary>
        /// Test WorkflowTemplateServiceDeleteWorkflowTemplate
        /// </summary>
        [Fact]
        public void WorkflowTemplateServiceDeleteWorkflowTemplateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string varNamespace = null;
            //string name = null;
            //string? deleteOptionsGracePeriodSeconds = null;
            //string? deleteOptionsPreconditionsUid = null;
            //string? deleteOptionsPreconditionsResourceVersion = null;
            //bool? deleteOptionsOrphanDependents = null;
            //string? deleteOptionsPropagationPolicy = null;
            //List<string>? deleteOptionsDryRun = null;
            //var response = instance.WorkflowTemplateServiceDeleteWorkflowTemplate(varNamespace, name, deleteOptionsGracePeriodSeconds, deleteOptionsPreconditionsUid, deleteOptionsPreconditionsResourceVersion, deleteOptionsOrphanDependents, deleteOptionsPropagationPolicy, deleteOptionsDryRun);
            //Assert.IsType<Object>(response);
        }

        /// <summary>
        /// Test WorkflowTemplateServiceGetWorkflowTemplate
        /// </summary>
        [Fact]
        public void WorkflowTemplateServiceGetWorkflowTemplateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string varNamespace = null;
            //string name = null;
            //string? getOptionsResourceVersion = null;
            //var response = instance.WorkflowTemplateServiceGetWorkflowTemplate(varNamespace, name, getOptionsResourceVersion);
            //Assert.IsType<IoArgoprojWorkflowV1alpha1WorkflowTemplate>(response);
        }

        /// <summary>
        /// Test WorkflowTemplateServiceLintWorkflowTemplate
        /// </summary>
        [Fact]
        public void WorkflowTemplateServiceLintWorkflowTemplateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string varNamespace = null;
            //IoArgoprojWorkflowV1alpha1WorkflowTemplateLintRequest body = null;
            //var response = instance.WorkflowTemplateServiceLintWorkflowTemplate(varNamespace, body);
            //Assert.IsType<IoArgoprojWorkflowV1alpha1WorkflowTemplate>(response);
        }

        /// <summary>
        /// Test WorkflowTemplateServiceListWorkflowTemplates
        /// </summary>
        [Fact]
        public void WorkflowTemplateServiceListWorkflowTemplatesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string varNamespace = null;
            //string? namePattern = null;
            //string? listOptionsLabelSelector = null;
            //string? listOptionsFieldSelector = null;
            //bool? listOptionsWatch = null;
            //bool? listOptionsAllowWatchBookmarks = null;
            //string? listOptionsResourceVersion = null;
            //string? listOptionsResourceVersionMatch = null;
            //string? listOptionsTimeoutSeconds = null;
            //string? listOptionsLimit = null;
            //string? listOptionsContinue = null;
            //var response = instance.WorkflowTemplateServiceListWorkflowTemplates(varNamespace, namePattern, listOptionsLabelSelector, listOptionsFieldSelector, listOptionsWatch, listOptionsAllowWatchBookmarks, listOptionsResourceVersion, listOptionsResourceVersionMatch, listOptionsTimeoutSeconds, listOptionsLimit, listOptionsContinue);
            //Assert.IsType<IoArgoprojWorkflowV1alpha1WorkflowTemplateList>(response);
        }

        /// <summary>
        /// Test WorkflowTemplateServiceUpdateWorkflowTemplate
        /// </summary>
        [Fact]
        public void WorkflowTemplateServiceUpdateWorkflowTemplateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string varNamespace = null;
            //string name = null;
            //IoArgoprojWorkflowV1alpha1WorkflowTemplateUpdateRequest body = null;
            //var response = instance.WorkflowTemplateServiceUpdateWorkflowTemplate(varNamespace, name, body);
            //Assert.IsType<IoArgoprojWorkflowV1alpha1WorkflowTemplate>(response);
        }
    }
}
